﻿@using miniStore.ViewModels.Common;
@model PagedResult<miniStore.ViewModels.System.Users.UserVM>

@{
    ViewData["Title"] = "Danh sách người dùng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@section Scripts {
    <script>
        setTimeout(() => {
            $('#msgAlert').fadeOut('slow')
        },2000)

    </script>
}


<div class="container-fluid">

    <!-- Page Heading -->
    <h1 class="h3 mb-2 text-gray-800">Tables</h1>

   
    @if (ViewBag.SuccessMsg != null)
    {
        <div id="msgAlert" class="alert alert-primary" role="alert">@ViewBag.SuccessMsg</div>
    }
   

    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <div class="row">
                <div class="col-md-6 col-xs-12">
                    <h6 class="m-0 font-weight-bold text-primary">DataTables Example</h6>
                </div>
                <div class="col-md-6 col-xs-12">
                    <form class="d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search">
                        <div class="input-group">
                            <input type="text" name="keyword" value="@ViewBag.Keyword" class="form-control bg-light border-0 small" placeholder="Search for..."
                                   aria-label="Search" aria-describedby="basic-addon2">
                            <div class="input-group-append">
                                <button class="btn btn-primary" type="submit">
                                    Search
                                </button>
                                <button type="button" class="btn btn-primary" onclick="window.location.href='/user/index'">
                                    Reset
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>


        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>
                                Tên
                            </th>
                            <th>
                                Họ
                            </th>
                            <th>
                                Số điện thoại
                            </th>
                            <th>
                                Tài khoản
                            </th>
                            <th>
                                Email
                            </th>
                            <th>
                                Sinh nhật
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                   
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FirstName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LastName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UserName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Email)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Dob)
                                </td>
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |
                                    @Html.ActionLink("Role Assign", "RoleAssign", new { id = item.Id })
                                </td>
                            </tr>
                        }
                    </tbody>
                    
                </table>
            </div>
            @await Component.InvokeAsync("Pager", Model)
        </div>
    </div>

</div>